group_by(employSector) %>%
filter(!is.na(employSector)) %>%
filter(!is.na(currentSalary)) %>%
summarise(Salary = mean(currentSalary)) %>%
arrange(desc(Salary))
ggplot(employData, aes(x = employSector, y = currentSalary)) +
geom_boxplot()
ggplot(subset(employData, !is.na(employSector)), aes(x = e!mploySector, y = currentSalary)) +
geom_boxplot()
ggplot(subset(employData, !is.na(employSector)), aes(x = e!mploySector, y = currentSalary)) +
geom_boxplot()
ggplot(subset(employData, !is.na(employSector)), aes(x = employSector, y = currentSalary)) +
geom_boxplot()
ggplot(subset(employData, !is.na(employSector)), aes(x = employSector, y = currentSalary)) +
geom_boxplot() +
theme(axis.text.x = aes(angle =45))
ggplot(subset(employData, !is.na(employSector)), aes(x = employSector, y = currentSalary)) +
geom_boxplot() +
element_text(axis.text.x = aes(angle =45))
ggplot(subset(employData, !is.na(employSector)), aes(x = employSector, y = currentSalary)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle =45))
ggplot(subset(employData, !is.na(employSector)), aes(x = employSector, y = currentSalary)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle =45)) +
scale_x_discrete(labels = abbreviate)
ggplot(subset(employData, !is.na(employSector)), aes(x = employSector, y = currentSalary)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle =45)) +
coord_flip()
ggplot(subset(employData, !is.na(employSector)), aes(x = employSector, y = currentSalary)) +
geom_boxplot() +
theme_minimal() +
coord_flip()
employBoxPlot <- ggplot(subset(employData, !is.na(employSector)), aes(x = employSector, y = currentSalary)) +
geom_boxplot() +
theme_minimal() +
coord_flip()
##Before and after Salary
meansalaryDiff <- mean(seekingEmp$currentSalary, na.rm = TRUE) - mean(seekingEmp$salaryPrior, na.rm = TRUE)
meansalaryDiff
mediansalaryDiff <- median(seekingEmp$currentSalary, na.rm = TRUE) - median(seekingEmp$salaryPrior, na.rm = TRUE)
##Before and after Salary
employData %>%
group_by(employSector) %>%
filter(!is.na(employSector)) %>%
filter(!is.na(currentSalary)) %>%
mutate(Salary = mean(currentSalary)) %>%
arrange(desc(Salary))
##Before and after Salary
employData %>%
group_by(employSector) %>%
filter(!is.na(employSector)) %>%
filter(!is.na(currentSalary)) %>%
summarise(Salary = mean(currentSalary)) %>%
arrange(desc(Salary))
##Before and after Salary
employData %>%
group_by(employSector) %>%
filter(!is.na(employSector)) %>%
filter(!is.na(currentSalary)) %>%
summarise(Salary = mean(currentSalary),
PrevSalary = mean(salaryPrior)) %>%
arrange(desc(Salary))
employData$salaryPrior
##Before and after Salary
employData %>%
group_by(employSector) %>%
filter(!is.na(employSector)) %>%
filter(!is.na(currentSalary)) %>%
summarise(Salary = mean(currentSalary),
PrevSalary = mean(salaryPriorm, na.rm = TRUE)) %>%
arrange(desc(Salary))
##Before and after Salary
employData %>%
group_by(employSector) %>%
filter(!is.na(employSector)) %>%
filter(!is.na(currentSalary)) %>%
summarise(Salary = mean(currentSalary),
PrevSalary = mean(salaryPriorm, na.rm = TRUE)) %>%
arrange(desc(Salary))
##Before and after Salary
employData %>%
group_by(employSector) %>%
filter(!is.na(employSector)) %>%
filter(!is.na(currentSalary)) %>%
summarise(Salary = mean(currentSalary),
PrevSalary = mean(salaryPrior, na.rm = TRUE)) %>%
arrange(desc(Salary))
##Before and after Salary
employData %>%
group_by(employSector) %>%
filter(!is.na(employSector)) %>%
filter(!is.na(currentSalary)) %>%
summarise(Salary = mean(currentSalary),
PrevSalary = mean(salaryPrior, na.rm = TRUE)) %>%
mutate(salaryChange  = Salary - PrevSalary) %>%
arrange(desc(Salary))
42/66
24692/66928
##Before and after Salary
employData %>%
group_by(employSector) %>%
filter(!is.na(employSector)) %>%
filter(!is.na(currentSalary)) %>%
summarise(Salary = mean(currentSalary),
PrevSalary = mean(salaryPrior, na.rm = TRUE)) %>%
mutate(salaryChange  = Salary - PrevSalary,
salaryChangePerc = salaryChange/Salary) %>%
arrange(desc(Salary))
##Before and after Salary
salaryChange <- employData %>%
group_by(employSector) %>%
filter(!is.na(employSector)) %>%
filter(!is.na(currentSalary)) %>%
summarise(Salary = mean(currentSalary),
PrevSalary = mean(salaryPrior, na.rm = TRUE)) %>%
mutate(salaryChange  = Salary - PrevSalary,
salaryChangePerc = salaryChange/Salary) %>%
arrange(desc(Salary))
addWorksheet(dataTables, "Salary Change by Sector")
writeData(dataTables, sheet = "Salary Change by Sector", x = salaryChange)
#Country Employment
empCountry <- seekingEmp %>%
group_by(employCountry) %>%
filter(!is.na(employCountry)) %>%
summarise(n=n()) %>%
ungroup %>%
mutate(rel.freq = n/sum(n))
empCountry
#Country Employment
empCountry <- seekingEmp %>%
group_by(employCountry) %>%
filter(!is.na(employCountry)) %>%
summarise(n=n()) %>%
ungroup %>%
mutate(rel.freq = n/sum(n)) %>%
arrange(desc(rel.freq))
addWorksheet(dataTables, "Employment by Country")
writeData(dataTables, sheet = "Employment by Country", x = empCountry)
employData  %>%
group_by(jobSearchTime) %>%
filter(!is.na(jobSearchTime)) %>%
filter(!is.na(jobSearchTime)) %>%
summarise(n = n()) %>%
mutate(relativeFrequency = n/sum(n)) %>%
arrange(desc(relativeFrequency))
searchTime <- employData  %>%
group_by(jobSearchTime) %>%
filter(!is.na(jobSearchTime)) %>%
filter(!is.na(jobSearchTime)) %>%
summarise(n = n()) %>%
mutate(relativeFrequency = n/sum(n)) %>%
arrange(desc(relativeFrequency))
addWorksheet(dataTables, "Months Seeking Emp")
writeData(dataTables, sheet = "Months Seeking Emp", x = searchTime)
privEnt  %>%
group_by(empSubsector) %>%
filter(!is.na(empSubsector)) %>%
filter(!is.na(currentSalary)) %>%
summarise(Salary = mean(currentSalary)) %>%
arrange(desc(Salary))
pubGov <- subset(employData, employSector == "Public/Government")
#nonprofit domestic vs national
pubGov  %>%
group_by(empSubsector) %>%
filter(!is.na(empSubsector)) %>%
summarise(n = n()) %>%
ungroup %>%
mutate(relativeFrequency = n/sum(n))  %>%
arrange(desc(relativeFrequency))
empSector
#NP/NGO Sector Breakdown
empSector <- employData %>%
group_by(employSector) %>%
filter(!is.na(employSector)) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(relativeFrequency = n/sum(n))  %>%
arrange(desc(relativeFrequency))
empSector
addWorksheet(dataTables, "Employment by Sector")
writeData(dataTables, sheet = "Employment by Sector", x = empSector)
##Top Industry Areas
indArea <- employData %>%
group_by(employInd) %>%
filter(!is.na(employInd)) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(relativeFrequency = n/sum(n))  %>%
arrange(desc(relativeFrequency))
indArea
#nonprofit domestic vs national
pubGov  %>%
group_by(empSubsector) %>%
filter(!is.na(empSubsector)) %>%
summarise(n = n()) %>%
ungroup %>%
mutate(relativeFrequency = n/sum(n))  %>%
arrange(desc(relativeFrequency))
#nonprofit domestic vs national
pubgovSubsector <- pubGov  %>%
group_by(empSubsector) %>%
filter(!is.na(empSubsector)) %>%
summarise(n = n()) %>%
ungroup %>%
mutate(relativeFrequency = n/sum(n))  %>%
arrange(desc(relativeFrequency))
addWorksheet(dataTables, "Public Gov. Subsector")
writeData(dataTables, sheet = "Public Gov. Subsector", x = pubgovSubsector)
#pubGov Industry Area
pubGovIndArea <- pubGov %>%
group_by(employInd) %>%
filter(!is.na(employInd)) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(relativeFrequency = n/sum(n))  %>%
arrange(desc(relativeFrequency))
pubGovIndArea
addWorksheet(dataTables, "Pub Gov Industry Area")
writeData(dataTables, sheet = "Pub Gov Industry Area", x = pubGovIndArea)
colnames(pubGov)
View(pubGov)
##pubGov International
pubGov %>%
group_by(international) %>%
filter(!is.na(international)) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(relativeFrequency = n/sum(n))  %>%
arrange(desc(relativeFrequency))
##pubGov International
intpubGov <- pubGov %>%
group_by(international) %>%
filter(!is.na(international)) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(relativeFrequency = n/sum(n))  %>%
arrange(desc(relativeFrequency))
addWorksheet(dataTables, "Pub Gov International")
writeData(dataTables, sheet = "Pub Gov International", x = intpubGov)
##government job titles Job Titles
pubGovJobTitle <- pubGov %>%
group_by(jobTitle) %>%
filter(!is.na(jobTitle)) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(relativeFrequency = n/sum(n))  %>%
arrange(desc(relativeFrequency))
addWorksheet(dataTables, "Pub Gov Job Title")
writeData(dataTables, sheet = "Pub Gov Job Title", x = pubGovJobTitle)
##Employee Info
pubGovEmployInfo <- pubGov %>%
group_by(currentEmployInfo) %>%
filter(!is.na(currentEmployInfo)) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(relativeFrequency = n/sum(n))  %>%
arrange(desc(relativeFrequency))
pubGovEmployInfo
jobInfo <- createWorkbook()
addWorksheet(jobInfo, "Public Gov. Subsector")
writeData(jobInfo, sheet = "Public Gov. Subsector", x = pubgovSubsector)
addWorksheet(jobInfo, "Pub Gov Industry Area")
writeData(jobInfo, sheet = "Pub Gov Industry Area", x = pubGovIndArea)
addWorksheet(jobInfo, "Pub Gov International")
writeData(jobInfo, sheet = "Pub Gov International", x = intpubGov)
addWorksheet(jobInfo, "Pub Gov Job Title")
writeData(jobInfo, sheet = "Pub Gov Job Title", x = pubGovJobTitle)
addWorksheet(jobInfo, "Pub Gov International")
addWorksheet(jobInfo, "Pub Gov Employer Info")
addWorksheet(jobInfo, "Pub Gov Employer Info")
writeData(jobInfo, sheet = "Pub Gov Employer Info", x = pubGovEmployInfo)
nonProfNGO <- subset(employData, employSector == "Nonprofit/NGO")
#nonprofit domestic vs national
nonProfNGO  %>%
group_by(international) %>%
filter(!is.na(international)) %>%
summarise(n = n()) %>%
ungroup %>%
mutate(total = sum(n), rel.freq = n / total)
#nonprofit domestic vs national
nonProfNGO  %>%
group_by(international) %>%
filter(!is.na(international)) %>%
summarise(n = n()) %>%
ungroup %>%
mutate(rel.freq = n / total)
#nonprofit domestic vs national
nonprofLoc <- nonProfNGO  %>%
group_by(international) %>%
filter(!is.na(international)) %>%
summarise(n = n()) %>%
ungroup %>%
mutate(rel.freq = n / total)
addWorksheet(dataTables, "Nonprof or NGO Location")
#nonprofit domestic vs national
nonprofLoc <- nonProfNGO  %>%
group_by(international) %>%
filter(!is.na(international)) %>%
summarise(n = n()) %>%
ungroup %>%
mutate(rel.freq = n / total)
nonprofLoc
nonprofLo
#nonprofit domestic vs national
nonprofLoc <- nonProfNGO  %>%
group_by(international) %>%
filter(!is.na(international)) %>%
summarise(n = n()) %>%
ungroup %>%
mutate(rel.freq = n / total)
#nonprofit domestic vs national
nonprofLoc <- nonProfNGO  %>%
group_by(international) %>%
filter(!is.na(international)) %>%
summarise(n = n()) %>%
ungroup %>%
mutate(rel.freq = n / sum(n ))
nonprofLoc
writeData(dataTables, sheet = "Nonprof or NGO Location", x = nonprofLoc)
pubgovSubsector
addWorksheet(jobInfo, "Nonprof or NGO Location")
writeData(jobInfo, sheet = "Nonprof or NGO Location", x = nonprofLoc)
#nonprofit Industry Area
nonProfEmploySector <- nonProfNGO %>%
group_by(employInd) %>%
filter(!is.na(employInd)) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(relativeFrequency = n/sum(n))  %>%
arrange(desc(relativeFrequency))
nonProfEmploySector
addWorksheet(jobInfo, "Nonprof or NGO Empoy Sector")
writeData(jobInfo, sheet = "Nonprof or NGO Empoy Sector", x = nonProfEmploySector)
nonporfLoc
nonprofLoc
addWorksheet(jobInfo, "Nonprof or NGO International")
addWorksheet(jobInfo, "Nonprof or NGO International")
writeData(jobInfo, sheet = "Nonprof or NGO International", x = nonprofLoc)
##nonprofit Job Titles
nonProfJobTitle <- nonProfNGO %>%
group_by(jobTitle) %>%
filter(!is.na(jobTitle)) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(relativeFrequency = n/sum(n))  %>%
arrange(desc(relativeFrequency))
nonProfJobTitle
addWorksheet(jobInfo, "Nonprof or NGO Job Title")
writeData(jobInfo, sheet = "Nonprof or NGO Job Title", x = nonProfJobTitle)
##NonProf Employee Info
nonProfEmployInfo <- nonProfNGO %>%
group_by(currentEmployInfo) %>%
filter(!is.na(currentEmployInfo)) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(relativeFrequency = n/sum(n))  %>%
arrange(desc(relativeFrequency))
nonProfEmployInfo
addWorksheet(jobInfo, "Nonprof or NGO Employer Info")
writeData(jobInfo, sheet = "Nonprof or NGO Employer Info", x = nonProfEmployInfo)
##Nonprofit location
nonProfNGO  %>%
group_by(employState) %>%
filter(!is.na(employState)) %>%
summarise(n=n()) %>%
ungroup %>%
mutate(relativeFrequency = n/sum(n)) %>%
arrange(desc(relativeFrequency))
privEnt <- subset(employData, employSector == "For-profit/Social Enterprise")
#private domestic vs national
privEnt  %>%
group_by(empSubsector) %>%
filter(!is.na(empSubsector)) %>%
summarise(n = n()) %>%
ungroup %>%
mutate(relativeFrequency = n/sum(n))  %>%
arrange(desc(relativeFrequency))
#private domestic vs national
privEntLoc <- privEnt %>%
group_by(international) %>%
filter(!is.na(international)) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(relativeFrequency = n/sum(n))  %>%
arrange(desc(relativeFrequency))
privEntLoc
addWorksheet(jobInfo, "Private International")
writeData(jobInfo, sheet = "{Private International", x = privEntLoc)
writeData(jobInfo, sheet = "Private International", x = privEntLoc)
privEntSubsector <- privEnt  %>%
group_by(empSubsector) %>%
filter(!is.na(empSubsector)) %>%
summarise(n = n()) %>%
ungroup %>%
mutate(relativeFrequency = n/sum(n))  %>%
arrange(desc(relativeFrequency))
addWorksheet(jobInfo, "Private Subsector")
writeData(jobInfo, sheet = "Private Subsectoro", x = privEntSubsector)
writeData(jobInfo, sheet = "Private Subsector", x = privEntSubsector)
privEntSubsector
#nonprofit Industry Area
privEntIndArea <- privEnt %>%
group_by(employInd) %>%
filter(!is.na(employInd)) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(relativeFrequency = n/sum(n))  %>%
arrange(desc(relativeFrequency))
privEntIndArea
addWorksheet(jobInfo, "Private Subsector")
##government job titles Job Titles
privEntJobTitle <- privEnt %>%
group_by(jobTitle) %>%
filter(!is.na(jobTitle)) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(relativeFrequency = n/sum(n))  %>%
arrange(desc(relativeFrequency))
addWorksheet(jobInfo, "Private Job Titles")
writeData(jobInfo, sheet = "Private Job Titles", x = privEntJobTitle)
addWorksheet(jobInfo, "Private Employer Info")
##Employee Info
privEntEmployInfo <- privEnt %>%
group_by(currentEmployInfo) %>%
filter(!is.na(currentEmployInfo)) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(relativeFrequency = n/sum(n))  %>%
arrange(desc(relativeFrequency))
privEntEmployInfo
addWorksheet(jobInfo, "Private Employer Info")
writeData(jobInfo, sheet = "Private Employer Info", x = privEntEmployInfo)
saveWorkbook(dataTables, "Class of 2019 Employment Overview.xlsx")
saveWorkbook(jobInfo, "Class of 2019 Sector Breakdown")
saveWorkbook(jobInfo, "Class of 2019 Sector Breakdown.xlsx")
usaEmp <- usaOnly %>%
group_by(currentStatus) %>%
filter(!is.na(currentStatus)) %>%
summarise(n = n()) %>%
ungroup %>%
mutate(freq = n / sum(n)) %>%
arrange(desc(freq))
usaEmp
usaOnly <-
usaOnly %>%
filter(
currentStatus != "Military service" &
currentStatus != "Volunteer service (Peace Corps, AmeriCorps, etc.)" &
currentStatus != "Not currently seeking employment" &
currentStatus != "Other (please specify)")
usaEmp <- usaOnly %>%
group_by(currentStatus) %>%
filter(!is.na(currentStatus)) %>%
summarise(n = n()) %>%
ungroup %>%
mutate(freq = n / sum(n)) %>%
arrange(desc(freq))
usaEmp
usaOnly <-
usaOnly %>%
filter(
currentStatus != "Military service" &
currentStatus != "Volunteer service (Peace Corps, AmeriCorps, etc.)" &
currentStatus != "Not currently seeking employment" &
currentStatus != "Other (please specify)")
unique(usaOnly$currentStatus)
#Importaing our own Dataset
github_Link <-"https://raw.githubusercontent.com/EvanLih/PUBPOL-543-BEES-Project/master/Final_Data.csv"
finalData <- read.csv(github_Link)
View(finalData)
View(indArea)
View(employData)
#NP/NGO Sector Breakdown
empSector <- employData %>%
group_by(employSector) %>%
filter(!is.na(employSector)) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(relativeFrequency = n/sum(n))  %>%
arrange(desc(relativeFrequency))
empSector
employData %>%
group_by(employSector) %>%
filter(!is.na(employSector)) %>%
filter(!is.na(currentSalary)) %>%
summarise(Salary = mean(currentSalary)) %>%
arrange(desc(Salary))
##Before and after Salary
salaryChange <- employData %>%
group_by(employSector) %>%
filter(!is.na(employSector)) %>%
filter(!is.na(currentSalary)) %>%
summarise(Salary = mean(currentSalary),
PrevSalary = mean(salaryPrior, na.rm = TRUE)) %>%
mutate(salaryChange  = Salary - PrevSalary,
salaryChangePerc = salaryChange/Salary) %>%
arrange(desc(Salary))
salaryChange
employData %>%
filter(!is.na(employSector)) %>%
filter(!is.na(currentSalary)) %>%
summarise(Salary = mean(currentSalary))
employData %>%
filter(!is.na(employSector)) %>%
filter(!is.na(currentSalary)) %>%
summarise(Salary = mean(currentSalary),
PrevSalary = mean(salaryPrior, na.rm = TRUE)) %>%
mutate(salaryChange  = Salary - PrevSalary,
salaryChangePerc = salaryChange/Salary) %>%
arrange(desc(Salary))
